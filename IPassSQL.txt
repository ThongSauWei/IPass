CREATE DATABASE IF NOT EXISTS groceryDB;
USE groceryDB;

-- User Table
CREATE TABLE User (
    UserID VARCHAR(10) PRIMARY KEY,   -- E.g., U0001
    Username VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Role VARCHAR(50),
    Birthday DATE,
    Gender CHAR(1),
    ProfileImage VARCHAR(255)
);

-- Admin Table
CREATE TABLE Admin (
    AdminID VARCHAR(10) PRIMARY KEY,  -- E.g., A0001
    UserID VARCHAR(10),
    AdminRole VARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);

-- Customer Table
CREATE TABLE Customer (
    CustomerID VARCHAR(10) PRIMARY KEY, -- E.g., C0001
    UserID VARCHAR(10),
    CustomerName VARCHAR(255),
    PhoneNumber VARCHAR(15),
    Address TEXT,
    Point INT,
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);

-- Product Table
CREATE TABLE Product (
    ProductID VARCHAR(10) PRIMARY KEY,  -- E.g., P0001
    ProductName VARCHAR(255),
    ProductDesc TEXT,
    Category VARCHAR(100),
    ProductPrice DECIMAL(10, 2),
    ProductImage VARCHAR(255),
    Availability BOOLEAN
);

-- Promotion Table
CREATE TABLE Promotion (
    PromotionID VARCHAR(10) PRIMARY KEY, -- E.g., PR0001
    PromotionName VARCHAR(255),
    Description TEXT,
    DiscountValue DECIMAL(5, 2),
    StartDate DATE,
    EndDate DATE,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- PromotionProducts Table (Many-to-Many between Promotion and Product)
CREATE TABLE PromotionProducts (
    PromotionID VARCHAR(10),  -- FK to Promotion
    ProductID VARCHAR(10),    -- FK to Product
    PRIMARY KEY (PromotionID, ProductID),
    FOREIGN KEY (PromotionID) REFERENCES Promotion(PromotionID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

-- Cart Table
CREATE TABLE Cart (
    CartID VARCHAR(10) PRIMARY KEY,  -- E.g., CT0001
    CustomerID VARCHAR(10),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

-- CartItem Table
CREATE TABLE CartItem (
    CartID VARCHAR(10),     -- FK to Cart
    ProductID VARCHAR(10),  -- FK to Product
    Quantity INT,
    PRIMARY KEY (CartID, ProductID),
    FOREIGN KEY (CartID) REFERENCES Cart(CartID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

-- Orders Table
CREATE TABLE Orders (
    OrderID VARCHAR(10) PRIMARY KEY,  -- E.g., O0001
    CustomerID VARCHAR(10),
    PurchasedAmt DECIMAL(10, 2),
    Discount DECIMAL(5, 2),
    OrderDate DATE,
    Status VARCHAR(50),
    DeliveryAddress TEXT,
    PaymentType VARCHAR(50),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

-- OrderDetails Table
CREATE TABLE OrderDetails (
    OrderID VARCHAR(10),    -- FK to Orders
    ProductID VARCHAR(10),  -- FK to Product
    UnitPrice DECIMAL(10, 2),
    Quantity INT,
    Discount DECIMAL(5, 2),
    PRIMARY KEY (OrderID, ProductID),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

-- Wishlist Table
CREATE TABLE Wishlist (
    WishListID VARCHAR(10) PRIMARY KEY,  -- E.g., W0001
    CustomerID VARCHAR(10),
    Status VARCHAR(50),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

-- WishlistItem Table
CREATE TABLE WishlistItem (
    WishlistID VARCHAR(10),   -- FK to Wishlist
    ProductID VARCHAR(10),    -- FK to Product
    DateAdded DATE,
    Quantity INT,
    PRIMARY KEY (WishlistID, ProductID),
    FOREIGN KEY (WishlistID) REFERENCES Wishlist(WishlistID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

-- SupportTicket Table
CREATE TABLE SupportTicket (
    TicketID VARCHAR(10) PRIMARY KEY,  -- E.g., T0001
    CustomerID VARCHAR(10),
    Status VARCHAR(50),
    Subject VARCHAR(255),
    Description TEXT,
    CreationDate DATE,
    LastUpdatedDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

-- TicketComment Table
CREATE TABLE TicketComment (
    CommentID VARCHAR(10) PRIMARY KEY,  -- E.g., TC0001
    TicketID VARCHAR(10),
    UserID VARCHAR(10),
    Comment TEXT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (TicketID) REFERENCES SupportTicket(TicketID),
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);

-- Vouchers Table
CREATE TABLE Vouchers (
    VoucherID VARCHAR(10) PRIMARY KEY,  -- E.g., V0001
    VoucherCode VARCHAR(255),
    VoucherType VARCHAR(50),
    Value DECIMAL(10, 2),
    PointRequired INT,
    ExpiryDate DATE,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Rewards Table
CREATE TABLE Rewards (
    RewardID VARCHAR(10) PRIMARY KEY,  -- E.g., R0001
    CustomerID VARCHAR(10),
    VoucherID VARCHAR(10),
    RedeemedDate DATE,
    Used BOOLEAN,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (VoucherID) REFERENCES Vouchers(VoucherID)
);
